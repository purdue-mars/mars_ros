#!/usr/bin/env python3

'''Generates the camera parent pose relative to the robot base given a transformation from the robot base to the optical frame (outputted by calibration tool)'''
import rospy

import tf2_ros
import tf2_geometry_msgs #import the packages first
from geometry_msgs.msg import PoseStamped

rospy.init_node('camera_link_pose_gen')

tf_buffer = tf2_ros.Buffer(rospy.Duration(1200.0)) #tf buffer length
tf_listener = tf2_ros.TransformListener(tf_buffer)

# transform camera_base -> optical_frame
pose = PoseStamped()
pose.pose.position.x = -0.059
pose.pose.position.y = 0
pose.pose.position.z = 0
pose.pose.orientation.x = 0.501
pose.pose.orientation.y = -0.499
pose.pose.orientation.z = 0.499
pose.pose.orientation.w = 0.501

transform = tf_buffer.lookup_transform("panda_link0",
                                   "d455_0_color_optical_frame", #source frame
                                   rospy.Time(0), #get the tf at first available time
                                   rospy.Duration(1.0))
pose_transformed = tf2_geometry_msgs.do_transform_pose(pose, transform)
p, o = pose_transformed.pose.position, pose_transformed.pose.orientation 
print("{} {} {} {} {} {} {}".format(p.x, p.y,p.z,o.x,o.y,o.z,o.w))