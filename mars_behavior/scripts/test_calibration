#! /usr/bin/env python3

from unittest import result
import rospy
from mars_behavior.arm import ArmInterface
from geometry_msgs.msg import Pose

def wait():
    r = rospy.Rate(30)
    while(not rospy.is_shutdown()):
        r.sleep()

if __name__ == '__main__':
    rospy.init_node('insertion')
    interface = ArmInterface()
    arm_tf = interface.get_arm_tf('panda')
    test_pose = Pose()
    test_pose.position.x = 0.025 * 24
    test_pose.position.y = 0.025 * 14
    test_pose.position.z = 0.01
    test_pose.orientation.x = 1
    test_pose.orientation.y = 0
    test_pose.orientation.z = 0
    test_pose.orientation.w = 0

    calib_pose = arm_tf.pose_from_object(f'panda_base_plate',test_pose)
    print(calib_pose)
    calib_pose = arm_tf.to_base(calib_pose)
    interface.add_goal(calib_pose,arm_tf.id)
    interface.execute_planned_goals(arm_tf.id)
    rospy.spin()